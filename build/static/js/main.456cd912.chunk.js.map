{"version":3,"sources":["firebase.js","components/Detail.js","features/user/userSlice.js","components/Header.js","features/movie/movieSlice.js","components/ImgSlider.js","components/Movies.js","components/Viewers.js","components/Home.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","getAuth","provider","GoogleAuthProvider","getStorage","Detail","id","useParams","useState","movie","setMovie","shouldRedirect","setShouldRedirect","useEffect","dbRef","doc","getDoc","then","exists","data","to","Container","Background","src","backgroundImg","alt","ImageTitle","titleImg","Controls","PlayButton","TrailerButton","AddButton","GroupWatchButton","SubTitle","subtitle","Description","description","styled","div","button","userSlice","createSlice","name","initialState","email","photo","reducers","setUserLogin","state","action","payload","setSignOut","actions","selectUserName","user","selectUserPhoto","Header","dispatch","useDispatch","history","useHistory","userName","useSelector","userPhoto","dispatchLoginUser","displayName","photoURL","push","onAuthStateChanged","a","Nav","Logo","NavMenu","StyledLink","UserImg","onClick","signOut","LoginContainer","Login","signInWithPopup","result","nav","img","Link","movieSlice","movies","setMovies","selectMovies","ImgSlider","Carousel","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","Wrap","Slider","Movies","Content","map","cardImg","title","Viewers","Home","onSnapshot","collection","snapshot","tempMovies","docs","main","CTA","CTALogoOne","SignUp","CTALogoTwo","p","App","className","path","store","configureStore","reducer","movieReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.456cd912.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app'\nimport { getFirestore } from 'firebase/firestore'\nimport { getStorage } from 'firebase/storage'\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyDGDJb6TSwNvVk0V1zHEjxgyYiIf5tYr8M',\n    authDomain: 'disney-plus-clone-23233.firebaseapp.com',\n    projectId: 'disney-plus-clone-23233',\n    storageBucket: 'disney-plus-clone-23233.appspot.com',\n    messagingSenderId: '215483191001',\n    appId: '1:215483191001:web:751b6e5f541c5658e1f8c8',\n}\n\nconst app = initializeApp(firebaseConfig)\nconst db = getFirestore(app)\nconst auth = getAuth(app)\nconst provider = new GoogleAuthProvider()\nconst storage = getStorage(app)\n\nexport { auth, provider, storage }\nexport default db\n","import { doc, getDoc } from 'firebase/firestore'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { Redirect } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport db from '../firebase'\r\n\r\nfunction Detail() {\r\n    const { id } = useParams()\r\n    const [movie, setMovie] = useState()\r\n    const [shouldRedirect, setShouldRedirect] = useState()\r\n\r\n    useEffect(() => {\r\n        // Grab the movie info from db\r\n        const dbRef = doc(db, 'movies', id)\r\n        getDoc(dbRef).then((doc) => {\r\n            if (doc.exists()) {\r\n                // save the movie data\r\n                setMovie(doc.data())\r\n            } else {\r\n                // redirect to home page\r\n                setShouldRedirect(true)\r\n            }\r\n        })\r\n    }, [id])\r\n\r\n    if (shouldRedirect) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {movie && (\r\n                <>\r\n                    <Background>\r\n                        <img src={movie.backgroundImg} alt='' />\r\n                    </Background>\r\n                    <ImageTitle>\r\n                        <img src={movie.titleImg} alt='' />\r\n                    </ImageTitle>\r\n                    <Controls>\r\n                        <PlayButton>\r\n                            <img src='/images/play-icon-black.png' alt='play button' />\r\n                            <span>PLAY</span>\r\n                        </PlayButton>\r\n                        <TrailerButton>\r\n                            <img src='/images/play-icon-white.png' alt='trailer button' />\r\n                            <span>Trailer</span>\r\n                        </TrailerButton>\r\n                        <AddButton>\r\n                            <span>+</span>\r\n                        </AddButton>\r\n                        <GroupWatchButton>\r\n                            <img src='/images/group-icon.png' alt='group watch icon' />\r\n                        </GroupWatchButton>\r\n                    </Controls>\r\n                    <SubTitle>{movie.subtitle}</SubTitle>\r\n                    <Description>{movie.description}</Description>\r\n                </>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Detail\r\n\r\nconst Container = styled.div`\r\n    min-height: calc(100vh - 70px);\r\n    padding: 0 calc(3.5vw + 5px);\r\n    position: relative;\r\n`\r\n\r\nconst Background = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: -1;\r\n    opacity: 0.8;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n`\r\n\r\nconst ImageTitle = styled.div`\r\n    height: 30vh;\r\n    min-height: 170px;\r\n    width: 35vw;\r\n    min-width: 200px;\r\n    margin-top: 60px;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: contain;\r\n    }\r\n`\r\n\r\nconst Controls = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nconst PlayButton = styled.button`\r\n    border-radius: 4px;\r\n    font-size: 15px;\r\n    padding: 0px 24px;\r\n    margin-right: 22px;\r\n    display: flex;\r\n    align-items: center;\r\n    height: 56px;\r\n    background: rgb(249, 249, 249);\r\n    border: none;\r\n    letter-spacing: 1.8px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background: rgb(198, 198, 198);\r\n    }\r\n`\r\n\r\nconst TrailerButton = styled(PlayButton)`\r\n    background: rgba(0, 0, 0, 0.3);\r\n    border: 1px solid rgb(249, 249, 249);\r\n    color: rgb(249, 249, 249);\r\n    text-transform: uppercase;\r\n`\r\n\r\nconst AddButton = styled.button`\r\n    margin-right: 16px;\r\n    width: 44px;\r\n    height: 44px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n    border: 2px solid white;\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    cursor: pointer;\r\n\r\n    span {\r\n        font-size: 30px;\r\n        color: white;\r\n    }\r\n`\r\n\r\nconst GroupWatchButton = styled(AddButton)`\r\n    background: rgb(0, 0, 0);\r\n`\r\n\r\nconst SubTitle = styled.div`\r\n    color: rgb(249, 249, 249);\r\n    font-size: 15px;\r\n    min-height: 20px;\r\n    margin-top: 26px;\r\n`\r\n\r\nconst Description = styled.div`\r\n    line-height: 1.4;\r\n    font-size: 20px;\r\n    margin-top: 16px;\r\n    color: rgb(249, 249, 249);\r\n    max-width: 760px;\r\n`\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    name: '',\r\n    email: '',\r\n    photo: '',\r\n}\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        setUserLogin: (state, action) => {\r\n            state.name = action.payload.name\r\n            state.email = action.payload.email\r\n            state.photo = action.payload.photo\r\n        },\r\n        setSignOut: (state) => {\r\n            state.name = null\r\n            state.email = null\r\n            state.photo = null\r\n        },\r\n    },\r\n})\r\n\r\nexport const { setUserLogin, setSignOut } = userSlice.actions\r\n\r\nexport const selectUserName = (state) => state.user.name\r\nexport const selectUserEmail = (state) => state.user.email\r\nexport const selectUserPhoto = (state) => state.user.photo\r\n\r\nexport default userSlice.reducer\r\n","import React, { useEffect } from 'react'\r\nimport { onAuthStateChanged, signInWithPopup, signOut } from '@firebase/auth'\r\nimport { auth, provider } from '../firebase'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { selectUserName, selectUserPhoto, setUserLogin, setSignOut } from '../features/user/userSlice'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nfunction Header() {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const userName = useSelector(selectUserName)\r\n    const userPhoto = useSelector(selectUserPhoto)\r\n\r\n    const dispatchLoginUser = (user) => {\r\n        dispatch(\r\n            setUserLogin({\r\n                name: user.displayName,\r\n                email: user.email,\r\n                photo: user.photoURL,\r\n            })\r\n        )\r\n        history.push('/')\r\n    }\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, async (user) => {\r\n            if (user) {\r\n                dispatchLoginUser(user)\r\n            }\r\n        })\r\n    })\r\n\r\n    const signIn = () => {\r\n        signInWithPopup(auth, provider).then((result) => {\r\n            const user = result.user\r\n            dispatchLoginUser(user)\r\n        })\r\n    }\r\n\r\n    const signUserOut = () => {\r\n        signOut(auth).then(() => {\r\n            dispatch(setSignOut())\r\n            history.push('/login')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Nav>\r\n            <Logo src='/images/logo.svg' />\r\n            {!userName ? (\r\n                <LoginContainer>\r\n                    <Login onClick={signIn}>Login</Login>\r\n                </LoginContainer>\r\n            ) : (\r\n                <>\r\n                    <NavMenu>\r\n                        <StyledLink to={`/`}>\r\n                            <img src='/images/home-icon.svg' alt='home' />\r\n                            <span>HOME</span>\r\n                        </StyledLink>\r\n                        <StyledLink to={`/`}>\r\n                            <img src='/images/search-icon.svg' alt='search' />\r\n                            <span>SEARCH</span>\r\n                        </StyledLink>\r\n                        <StyledLink to={`/`}>\r\n                            <img src='/images/watchlist-icon.svg' alt='watchlist' />\r\n                            <span>WATCHLIST</span>\r\n                        </StyledLink>\r\n                        <StyledLink to={`/`}>\r\n                            <img src='/images/original-icon.svg' alt='original' />\r\n                            <span>ORIGINALS</span>\r\n                        </StyledLink>\r\n                        <StyledLink to={`/`}>\r\n                            <img src='/images/movie-icon.svg' alt='movie' />\r\n                            <span>MOVIES</span>\r\n                        </StyledLink>\r\n                        <StyledLink to={`/`}>\r\n                            <img src='/images/series-icon.svg' alt='' />\r\n                            <span>SERIES</span>\r\n                        </StyledLink>\r\n                    </NavMenu>\r\n                    <UserImg src={userPhoto} alt='profile image' onClick={signUserOut} />\r\n                </>\r\n            )}\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nconst Nav = styled.nav`\r\n    height: 70px;\r\n    background: #090b13;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 36px;\r\n    overflow-x: hidden;\r\n`\r\n\r\nconst Logo = styled.img`\r\n    width: 80px;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 12px;\r\n    cursor: pointer;\r\n    color: #f9f9f9;\r\n    text-decoration: none;\r\n\r\n    img {\r\n        height: 20px;\r\n    }\r\n\r\n    span {\r\n        font-size: 13px;\r\n        letter-spacing: 1.42px;\r\n        position: relative;\r\n\r\n        &:after {\r\n            content: '';\r\n            height: 2px;\r\n            background: white;\r\n            position: absolute;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: -6px;\r\n            opacity: 0;\r\n            transform-origin: left center;\r\n            transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\r\n            transform: scaleX(0);\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        span:after {\r\n            transform: scaleX(1);\r\n            opacity: 1;\r\n        }\r\n    }\r\n`\r\nconst NavMenu = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n    margin-left: 25px;\r\n    align-items: center;\r\n`\r\nconst UserImg = styled.img`\r\n    width: 48px;\r\n    height: 48px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n`\r\nconst Login = styled.button`\r\n    border: 1px solid #f9f9f9;\r\n    padding: 8px 16px;\r\n    border-radius: 4px;\r\n    letter-spacing: 1.5px;\r\n    text-transform: uppercase;\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    color: #f9f9f9;\r\n    transition: all 0.2s ease 0s;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background-color: #f9f9f9;\r\n        color: #000;\r\n        border-color: transparent;\r\n    }\r\n`\r\n\r\nconst LoginContainer = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n    justify-content: flex-end;\r\n`\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    movies: [],\r\n}\r\n\r\nconst movieSlice = createSlice({\r\n    name: 'movie',\r\n    initialState,\r\n    reducers: {\r\n        setMovies: (state, action) => {\r\n            state.movies = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const { setMovies } = movieSlice.actions\r\n\r\nexport const selectMovies = (state) => state.movie.movies\r\n\r\nexport default movieSlice.reducer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Slider from 'react-slick'\r\nimport 'slick-carousel/slick/slick.css'\r\nimport 'slick-carousel/slick/slick-theme.css'\r\n\r\nfunction ImgSlider() {\r\n    let settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n    }\r\n\r\n    return (\r\n        <Carousel {...settings}>\r\n            <Wrap>\r\n                <img src='/images/slider-badging.jpg' alt='' />\r\n            </Wrap>\r\n            <Wrap>\r\n                <img src='/images/slider-badag.jpg' alt='' />\r\n            </Wrap>\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ImgSlider\r\n\r\nconst Carousel = styled(Slider)`\r\n    margin-top: 20px;\r\n\r\n    ul li button {\r\n        &:before {\r\n            font-size: 10px;\r\n            color: rgb(150, 158, 171);\r\n        }\r\n    }\r\n\r\n    li.slick-active button:before {\r\n        color: white;\r\n    }\r\n\r\n    .slick-list {\r\n        overflow: visible;\r\n    }\r\n\r\n    button {\r\n        z-index: 1;\r\n    }\r\n`\r\n\r\nconst Wrap = styled.div`\r\n    cursor: pointer;\r\n\r\n    img {\r\n        border: 4px solid transparent;\r\n        border-radius: 4px;\r\n        width: 100%;\r\n        height: 100%;\r\n        box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\r\n            rgb(0 0 0 / 73%) 0px 16px 10px -10px;\r\n        transition-duration: 300ms;\r\n\r\n        &:hover {\r\n            border: 4px solid rgba(249, 249, 249, 0.8);\r\n        }\r\n    }\r\n`\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { selectMovies } from '../features/movie/movieSlice'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Movies() {\r\n    const movies = useSelector(selectMovies)\r\n\r\n    return (\r\n        <Container>\r\n            <h4>Recommended for you</h4>\r\n            <Content>\r\n                {movies &&\r\n                    movies.map((movie) => (\r\n                        <Wrap key={movie.id}>\r\n                            <Link to={`/detail/${movie.id}`}>\r\n                                <img src={movie.cardImg} alt={movie.title} />\r\n                            </Link>\r\n                        </Wrap>\r\n                    ))}\r\n            </Content>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Movies\r\n\r\nconst Container = styled.div``\r\n\r\nconst Content = styled.div`\r\n    display: grid;\r\n    grid-gap: 25px;\r\n    grid-template-columns: repeat(4, minmax(0, 1fr));\r\n`\r\n\r\nconst Wrap = styled.div`\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    border: 3px solid rgba(249, 249, 249, 0.1);\r\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px, rgb(0 0 0 / 73%) 0px 16px 10px -10px;\r\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n\r\n    &:hover {\r\n        transform: scale(1.05);\r\n        box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px, rgb(0 0 0 / 72%) 0px 30px 22px -10px;\r\n        border-color: rgba(249, 249, 249, 0.8);\r\n    }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction Viewers() {\r\n    return (\r\n        <Container>\r\n            <Wrap>\r\n                <img src='/images/viewers-disney.png' alt=\"disney\"/>\r\n            </Wrap>\r\n            <Wrap>\r\n                <img src='/images/viewers-pixar.png' alt=\"pixar\"/>\r\n            </Wrap>\r\n            <Wrap>\r\n                <img src='/images/viewers-marvel.png' alt=\"marvel\"/>\r\n            </Wrap>\r\n            <Wrap>\r\n                <img src='/images/viewers-starwars.png' alt=\"starwars\"/>\r\n            </Wrap>\r\n            <Wrap>\r\n                <img src='/images/viewers-national.png' alt=\"national\"/>\r\n            </Wrap>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Viewers\r\n\r\nconst Container = styled.div`\r\n    margin-top: 30px;\r\n    display: grid;\r\n    padding: 30px 0 26px;\r\n    grid-gap: 25px;\r\n    grid-template-columns: repeat(5, minmax(0, 1fr));\r\n`\r\n\r\nconst Wrap = styled.div`\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n    border: 3px solid rgba(249, 249, 249, 0.1);\r\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\r\n        rgb(0 0 0 / 73%) 0px 16px 10px -10px;\r\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n\r\n    &:hover {\r\n        box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,\r\n            rgb(0 0 0 / 72%) 0px 30px 22px -10px;\r\n        transform: scale(1.05);\r\n        border-color: rgba(249, 249, 249, 0.8);\r\n    }\r\n`\r\n","import { collection, onSnapshot } from 'firebase/firestore'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { setMovies } from '../features/movie/movieSlice'\r\nimport db from '../firebase'\r\nimport ImgSlider from './ImgSlider'\r\nimport Movies from './Movies'\r\nimport Viewers from './Viewers'\r\n\r\nfunction Home() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        onSnapshot(collection(db, 'movies'), (snapshot) => {\r\n            const tempMovies = snapshot.docs.map((doc) => {\r\n                return { id: doc.id, ...doc.data() }\r\n            })\r\n\r\n            dispatch(setMovies(tempMovies))\r\n        })\r\n    })\r\n\r\n    return (\r\n        <Container>\r\n            <ImgSlider />\r\n            <Viewers />\r\n            <Movies />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\nconst Container = styled.main`\r\n    min-height: calc(100vh - 70px);\r\n    padding: 0 calc(3.5vw + 5px);\r\n    position: relative;\r\n    overflow-x: hidden;\r\n\r\n    &:before {\r\n        background: url('/images/home-background.png') center center/cover no-repeat fixed;\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        z-index: -1;\r\n    }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction Login() {\r\n    return (\r\n        <Container>\r\n            <CTA>\r\n                <CTALogoOne src=\"/images/cta-logo-one.svg\" />\r\n                <SignUp>GET ALL THERE</SignUp>\r\n                <Description>\r\n                    Get Premier access to Raya and the Last Dragon for additional fee with a Disney+ subscription. As of 03/26/21, the price of Disney+ and The Disney Bundle will increase by $1.\r\n                </Description>\r\n                <CTALogoTwo src=\"/images/cta-logo-two.png\" />\r\n            </CTA>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    height: calc(100vh - 70px);\r\n    display: flex;\r\n    align-items: top;\r\n    justify-content: center;\r\n\r\n    &:before {\r\n        background-position: top;\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        background-image: url(\"/images/login-background.jpg\");\r\n        position: absolute;\r\n        content: \"\";\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        opacity: 0.7;\r\n        z-index: -1;\r\n    }\r\n`\r\n\r\nconst CTA = styled.div`\r\n    max-width: 650px;\r\n    padding: 80px 40px;\r\n    width: 90%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 100px;\r\n    align-items: center;\r\n`\r\n\r\nconst CTALogoOne = styled.img``\r\n\r\nconst SignUp = styled.a`\r\n    width: 100%;\r\n    background-color: #0063e5;\r\n    font-weight: bold;\r\n    padding: 17px 0;\r\n    color: #f9f9f9;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n    transition: all 250ms;\r\n    letter-spacing: 1.5px;\r\n    margin-top: 8px;\r\n    margin-bottom: 8px;\r\n\r\n    &:hover {\r\n        background: #0483ee;\r\n    }\r\n`\r\n\r\nconst Description = styled.p`\r\n    font-size: 11px;\r\n    letter-spacing: 1.5px;\r\n    text-align: center;\r\n    line-height: 1.5;\r\n`\r\n\r\nconst CTALogoTwo = styled.img`\r\n    width: 90%;\r\n`","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport Detail from './components/Detail'\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport Login from './components/Login'\n\nfunction App() {\n    return (\n        <div className='App'>\n            <Router>\n                <Header />\n                <Switch>\n                    <Route path='/login'>\n                        <Login />\n                    </Route>\n                    <Route path='/detail/:id'>\n                        <Detail />\n                    </Route>\n                    <Route path='/'>\n                        <Home />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport movieReducer from '../features/movie/movieSlice'\nimport userReducer from '../features/user/userSlice'\n\nexport const store = configureStore({\n    reducer: {\n        movie: movieReducer,\n        user: userReducer,\n    },\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}